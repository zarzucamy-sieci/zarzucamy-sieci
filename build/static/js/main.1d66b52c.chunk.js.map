{"version":3,"sources":["client.js","background.jpg","logos.png","components/AllPosts.js","components/OnePost.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["sanityClient","projectId","dataset","useCdn","useStyles","makeStyles","theme","AppBar","backgroundColor","hero","backgroundImage","backgroundImg","height","backgroundPosition","backgroundRepeat","backgroundSize","position","display","justifyContent","alignItems","color","fontSize","breakpoints","down","blogsContainer","paddingTop","spacing","blogTitle","fontFamily","fontWeight","paddingBottom","card","maxWidth","media","cardActions","margin","author","paginationContainer","barContainer","AllPosts","useState","allPostsData","setAllPosts","useEffect","fetch","then","data","catch","console","error","log","classes","className","Helmet","Toolbar","Typography","style","flex","variant","href","alt","src","logo","target","rel","icon","faInstagram","size","faFacebook","faDiscord","Box","map","post","index","to","slug","current","key","mainImage","asset","url","title","builder","imageUrlBuilder","OnePost","source","postData","setPostData","useParams","document","cookie","indexOf","name","image","blocks","body","clientConfig","Footer","class","data-aos","data-aos-delay","id","App","component","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1d66b52c.chunk.js","sourcesContent":["import sanityClient from \"@sanity/client\";\n\nexport default sanityClient({\n  projectId: \"wyq7wif2\", // find this at manage.sanity.io, run `sanity init` to initialize\n  dataset: \"production\", // this is from when we answered those question from 'sanity init'\n  useCdn: true,\n});\n","export default __webpack_public_path__ + \"static/media/background.ec3d27e3.jpg\";","export default __webpack_public_path__ + \"static/media/logos.dc54aa44.png\";","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box } from \"@material-ui/core\";\nimport { Helmet } from \"react-helmet\";\nimport backgroundImg from \"../background.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebook,\n  faInstagram,\n  faDiscord,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport \"../styles.css\";\nimport \"../index.css\";\nimport logo from \"../logos.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  AppBar: {\n    backgroundColor: \"#fff\",\n  },\n  hero: {\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0)), url(${backgroundImg})`,\n    height: \"100vh\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    //backgroundAttachment: \"fixed\",\n    backgroundSize: \"cover\",\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"#fff\",\n    fontSize: \"3rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 220,\n      fontSize: \"0.6em\",\n    },\n  },\n  blogsContainer: {\n    paddingTop: theme.spacing(3),\n  },\n  blogTitle: {\n    fontFamily: \"PT Sans\",\n    fontWeight: 800,\n    paddingBottom: theme.spacing(3),\n  },\n  card: {\n    maxWidth: \"100%\",\n  },\n  media: {\n    height: 240,\n  },\n  cardActions: {\n    display: \"flex\",\n    margin: \"0 10px\",\n    justifyContent: \"space-between\",\n  },\n  author: {\n    display: \"flex\",\n  },\n  paginationContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  barContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nexport default function AllPosts() {\n  const [allPostsData, setAllPosts] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"post\"] | order(publishedAt desc){\n            title,\n            slug,\n            publishedAt,\n            mainImage{\n              asset->{\n                _id,\n                url\n              }\n            }\n          }`\n      )\n      .then((data) => setAllPosts(data))\n      .catch(console.error);\n  }, []);\n\n  console.log(allPostsData);\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.AppBar} position=\"fixed\">\n        <Helmet>\n          <title>Zarzucamy Sieci</title>\n        </Helmet>\n        <Toolbar className={classes.barContainer}>\n          <Typography style={{ flex: 1 }}>\n            <div className=\"logoimg\" variant=\"h6\" color=\"primary\">\n              {/* <img //src=\"https://i.imgur.com/nkrHhMo.png\"\n                src={logo}\n                alt=\"logo\"/> */}\n              {/* <a href=\"https://zarzucamysieci.pl\">\n                <img alt=\"logo\" src={logo} onClick=\"https://zarzucamysieci.pl\" />\n              </a> */}\n              <a href=\"https://zarzucamysieci.pl\">\n                <img alt=\"logo\" src={logo} />\n              </a>\n            </div>\n          </Typography>\n          <div className=\"social-container\">\n            <a\n              href=\"https://www.instagram.com/zarzucamy_sieci\"\n              className=\"instagram social\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n            </a>\n            <a\n              href=\"https://www.facebook.com/groups/211293953375788\"\n              className=\"facebook social\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\n            </a>\n            <a\n              href=\"https://www.discord.gg/4p8PHrF\"\n              className=\"discord social\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faDiscord} size=\"2x\" />\n            </a>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Box className={classes.hero}>\n      </Box>\n      <Typography variant=\"h4\" className={classes.blogTitle}>\n        Posty\n        </Typography>\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n        {/*<Container maxWidth=\"lg\" className={classes.blogsContainer}>*/}\n        {allPostsData &&\n          allPostsData.map((post, index) => (\n            <Link to={\"/\" + post.slug.current} key={post.slug.current}>\n              <span\n                className=\"block h-64 relative rounded shadow leading-snug bg-white border-l-8 border-green-400\"\n                key={index}\n              >\n                <img\n                  className=\"w-full h-full rounded-r object-cover absolute\"\n                  src={post.mainImage.asset.url}\n                  alt=\"\"\n                />\n                <span className=\"block relative h-full flex justify-end items-end pr-4 pb-4\">\n                  <h2 className=\"text-gray-800 text-lg font-bold px-3 py-4 bg-red-700 text-red-100 bg-opacity-75 rounded\">\n                    {post.title}\n                  </h2>\n                </span>\n              </span>\n            </Link>\n          ))}\n        {/*</Container>*/}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport { Helmet } from \"react-helmet\";\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function OnePost() {\n  const [postData, setPostData] = useState(null);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == \"${slug}\"]{\n            title,\n            slug,\n            publishedAt,\n            mainImage{\n              asset->{\n                _id,\n                url\n              }\n            },\n            body,\n            \"name\": author->name,\n            \"authorImage\": author->image\n          }`\n      )\n      .then((data) => setPostData(data[0]))\n      .catch(console.error);\n  }, [slug]);\n\n  if (!postData) return <div>Ładowanie...</div>;\n  /*if(sessionStorage.getItem(\"is_reloaded\")) {\n    window.location.replace(\"http://localhost:3000/\" + slug);\n  }\n    sessionStorage.setItem(\"is_reloaded\", true) */\n    checkFirstValue();\nfunction checkFirstValue() {\n  if(document.cookie.indexOf('mycookie')==-1) {\n    document.cookie = \"mycookie=1\";\n  }\n  else {\n    //window.location.replace(\"http://localhost:3000/\" + slug);\n    console.log(\"good\");\n  }\n}\n\n  return (\n    <body>\n    <div className=\"bg-gray-200 min-h-screen p-12\">\n      <Helmet>\n          <title>Zarzucamy Sieci</title>\n      </Helmet>\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\n        <div className=\"relative\">\n          <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n            {/* Title Section */}\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h2 className=\"cursive text-3xl lg:text-6xl mb-4\">\n                {postData.title}\n              </h2>\n              <div className=\"flex justify-center text-gray-800\">\n                {/*<img\n                  src={urlFor(postData.authorImage).url()}\n                  className=\"w-10 h-10 rounded-full\"\n                  alt=\"Autor:\"\n                />*/}\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">Autor: {postData.name}</h4>\n\n                {/* <h4 className=\"cursive flex items-center pl-2 text-2xl\">\n                  {postData.name}\n                </h4> */}\n              </div>\n            </div>\n          </div>\n          <img\n            className=\"w-full object-cover rounded-t\"\n            src={urlFor(postData.mainImage).url()}\n            alt=\"\"\n            style={{ height: \"400px\" }}\n          />\n        </div>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          <BlockContent\n            blocks={postData.body}\n            projectId={sanityClient.clientConfig.projectId}\n            dataset={sanityClient.clientConfig.dataset}\n          />\n        </div>\n      </div>\n    </div>\n    </body>\n  );\n}\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n    return (\n        <div className=\"main-footer\">\n              <div class=\"container\">\n            <div class=\"about-us\" data-aos=\"fade-right\" data-aos-delay=\"200\">\n                <h2>O nas</h2>\n                <p>\n                Jesteśmy wspólnotą młodych ludzi, która poznała się w bardzo nowoczesny sposób - odnaleźliśmy się w katolickiej grupie na Facebooku, bo szukaliśmy miejsca, gdzie moglibyśmy rozmawiać o naszych wątpliwościach i problemach. Z tego zrodził się pomysł na bloga, którego teraz czytasz.\n                </p>\n            </div>\n            <div class=\"newsletter\" data-aos=\"fade-right\" data-aos-delay=\"200\">\n                <h2>Kontakt</h2>\n                <div class=\"form-element\">\n                    <a href=\"mailto:zarzucamysieci@gmail.com\">\n                    <button class=\"contact-btn\">Napisz do nas!</button>\n                    </a>\n                </div>\n            </div>\n            <div class=\"instagram\" data-aos=\"fade-left\" data-aos-delay=\"200\">\n                <h2>Instagram</h2>\n                <div class=\"flex-row\">\n                  <a href=\"https://www.instagram.com/p/CMHjlaZDk7S/\">\n                  <img src=\"https://scontent-waw1-1.cdninstagram.com/v/t51.2885-15/sh0.08/e35/s640x640/157944210_858051671408342_9207361180764222181_n.jpg?tp=1&_nc_ht=scontent-waw1-1.cdninstagram.com&_nc_cat=102&_nc_ohc=O3zlWvIxoOsAX-_n3uZ&oh=e82af10ced062d36aa371ee517de9014&oe=607038C6\"\n                  alt=\"insta1\"/>\n                  </a>\n                    <a id = \"insta2\" href=\"https://www.instagram.com/p/CMDIvT3jrN-/\">\n                    <img src=\"https://scontent-waw1-1.cdninstagram.com/v/t51.2885-15/e35/s320x320/157612323_433376044634203_796557293405093924_n.jpg?tp=1&_nc_ht=scontent-waw1-1.cdninstagram.com&_nc_cat=107&_nc_ohc=Pd5ntgt6x0AAX9FeL86&oh=8fec3d5329996703c62a5272aeff8e2c&oe=606DC29B\"\n                    alt=\"insta2\"/>\n                    </a>\n                    <a href=\"https://www.instagram.com/p/CL7P8nqjOdq/\">\n                    <img src=\"https://scontent-waw1-1.cdninstagram.com/v/t51.2885-15/e35/s320x320/155471225_3606052112847705_4872008657666448113_n.jpg?tp=1&_nc_ht=scontent-waw1-1.cdninstagram.com&_nc_cat=109&_nc_ohc=Ys-qMDasLhYAX9NvmOC&oh=5e7e32b84d3e8b07093d75ab0dbe8095&oe=607036EF\"\n                     alt=\"insta3\"/>\n                     </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"rights\">\n            <h4 class=\"text-gray\">\n                Zarzucamy Sieci 2021\n            </h4>\n        </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AllPosts from \"./components/AllPosts.js\";\nimport OnePost from \"./components/OnePost.js\";\nimport Footer from \"./components/Footer.js\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Route component={AllPosts} path=\"/\" exact />\n        <Route component={OnePost} path=\"/:slug\" />\n        <br/>\n        <br/>\n        <br/>\n        <Route component={Footer} exact/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}