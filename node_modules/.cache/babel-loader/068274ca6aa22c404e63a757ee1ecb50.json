{"ast":null,"code":"'use strict';\n\nvar objectAssign = require('object-assign');\n\nvar urlParse = require('url-parse');\n\nvar isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative';\nvar has = Object.prototype.hasOwnProperty;\nvar defaultOptions = {\n  timeout: isReactNative ? 60000 : 120000\n};\n\nmodule.exports = function (opts) {\n  var options = typeof opts === 'string' ? objectAssign({\n    url: opts\n  }, defaultOptions) : objectAssign({}, defaultOptions, opts); // Parse URL into parts\n\n  var url = urlParse(options.url, {}, // Don't use current browser location\n  true // Parse query strings\n  ); // Normalize timeouts\n\n  options.timeout = normalizeTimeout(options.timeout); // Shallow-merge (override) existing query params\n\n  if (options.query) {\n    url.query = objectAssign({}, url.query, removeUndefined(options.query));\n  } // Implicit POST if we have not specified a method but have a body\n\n\n  options.method = options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase(); // Stringify URL\n\n  options.url = url.toString(stringifyQueryString);\n  return options;\n};\n\nfunction stringifyQueryString(obj) {\n  var pairs = [];\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      push(key, obj[key]);\n    }\n  }\n\n  return pairs.length ? pairs.join('&') : '';\n\n  function push(key, val) {\n    if (Array.isArray(val)) {\n      val.forEach(function (item) {\n        return push(key, item);\n      });\n    } else {\n      pairs.push([key, val].map(encodeURIComponent).join('='));\n    }\n  }\n}\n\nfunction normalizeTimeout(time) {\n  if (time === false || time === 0) {\n    return false;\n  }\n\n  if (time.connect || time.socket) {\n    return time;\n  }\n\n  var delay = Number(time);\n\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout);\n  }\n\n  return {\n    connect: delay,\n    socket: delay\n  };\n}\n\nfunction removeUndefined(obj) {\n  var target = {};\n\n  for (var key in obj) {\n    if (obj[key] !== undefined) {\n      target[key] = obj[key];\n    }\n  }\n\n  return target;\n}","map":{"version":3,"sources":["../../src/middleware/defaultOptionsProcessor.js"],"names":["objectAssign","require","urlParse","isReactNative","navigator","has","Object","defaultOptions","timeout","module","options","url","normalizeTimeout","removeUndefined","pairs","push","obj","Array","val","time","delay","Number","isNaN","connect","socket","target"],"mappings":"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","sourcesContent":["const objectAssign = require('object-assign')\nconst urlParse = require('url-parse')\n\nconst isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst has = Object.prototype.hasOwnProperty\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000}\n\nmodule.exports = opts => {\n  const options =\n    typeof opts === 'string'\n      ? objectAssign({url: opts}, defaultOptions)\n      : objectAssign({}, defaultOptions, opts)\n\n  // Parse URL into parts\n  const url = urlParse(\n    options.url,\n    {}, // Don't use current browser location\n    true // Parse query strings\n  )\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    url.query = objectAssign({}, url.query, removeUndefined(options.query))\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  // Stringify URL\n  options.url = url.toString(stringifyQueryString)\n\n  return options\n}\n\nfunction stringifyQueryString(obj) {\n  const pairs = []\n  for (const key in obj) {\n    if (has.call(obj, key)) {\n      push(key, obj[key])\n    }\n  }\n\n  return pairs.length ? pairs.join('&') : ''\n\n  function push(key, val) {\n    if (Array.isArray(val)) {\n      val.forEach(item => push(key, item))\n    } else {\n      pairs.push([key, val].map(encodeURIComponent).join('='))\n    }\n  }\n}\n\nfunction normalizeTimeout(time) {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n\nfunction removeUndefined(obj) {\n  const target = {}\n  for (const key in obj) {\n    if (obj[key] !== undefined) {\n      target[key] = obj[key]\n    }\n  }\n  return target\n}\n"]},"metadata":{},"sourceType":"script"}