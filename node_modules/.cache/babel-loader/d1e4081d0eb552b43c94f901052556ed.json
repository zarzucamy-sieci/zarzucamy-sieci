{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar internals = require('@sanity/block-content-to-hyperscript/internals');\n\nvar _require = require('./targets/dom'),\n    serializers = _require.serializers,\n    serializeSpan = _require.serializeSpan,\n    renderProps = _require.renderProps;\n\nvar getImageUrl = internals.getImageUrl,\n    blocksToNodes = internals.blocksToNodes,\n    mergeSerializers = internals.mergeSerializers;\nvar renderNode = React.createElement;\n\nvar SanityBlockContent = function SanityBlockContent(props) {\n  var customSerializers = mergeSerializers(SanityBlockContent.defaultSerializers, props.serializers);\n  var blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || []\n  });\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan);\n}; // Expose default serializers to the user\n\n\nSanityBlockContent.defaultSerializers = serializers; // Expose logic for building image URLs from an image reference/node\n\nSanityBlockContent.getImageUrl = getImageUrl;\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func\n  }),\n  blocks: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })), PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })]).isRequired\n};\nSanityBlockContent.defaultProps = {\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {}\n};\nmodule.exports = SanityBlockContent;","map":{"version":3,"sources":["../src/BlockContent.js"],"names":["React","require","PropTypes","internals","serializers","serializeSpan","renderProps","getImageUrl","blocksToNodes","mergeSerializers","renderNode","SanityBlockContent","customSerializers","props","blockProps","blocks","className","renderContainerOnSingleChild","projectId","dataset","imageOptions","types","marks","list","listItem","block","span","func","_type","isRequired","module"],"mappings":";;AAAA,IAAMA,KAAAA,GAAQC,OAAAA,CAAd,OAAcA,CAAd;;AACA,IAAMC,SAAAA,GAAYD,OAAAA,CAAlB,YAAkBA,CAAlB;;AACA,IAAME,SAAAA,GAAYF,OAAAA,CAAlB,gDAAkBA,CAAlB;;eACkDA,OAAAA,CAAAA,eAAAA,C;IAA3CG,W,YAAAA,W;IAAaC,a,YAAAA,a;IAAeC,W,YAAAA,W;;IAE5BC,W,GAAgDJ,S,CAAhDI,W;IAAaC,a,GAAmCL,S,CAAnCK,a;IAAeC,gB,GAAoBN,S,CAApBM,gB;AACnC,IAAMC,UAAAA,GAAaV,KAAAA,CAAnB,aAAA;;AAEA,IAAMW,kBAAAA,GAAqB,SAArBA,kBAAqB,CAAA,KAAA,EAAS;AAClC,MAAMC,iBAAAA,GAAoBH,gBAAAA,CACxBE,kBAAAA,CADwBF,kBAAAA,EAExBI,KAAAA,CAFF,WAA0BJ,CAA1B;AAKA,MAAMK,UAAAA,GAAa,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAA,EAAA,KAAA,EAAsC;AACvDV,IAAAA,WAAAA,EADuD,iBAAA;AAEvDW,IAAAA,MAAAA,EAAQF,KAAAA,CAAAA,MAAAA,IAAgB;AAF+B,GAAtC,CAAnB;AAKA,SAAOL,aAAAA,CAAAA,UAAAA,EAAAA,UAAAA,EAAAA,WAAAA,EAAP,aAAOA,CAAP;AAXF,CAAA,C,CAcA;;;AACAG,kBAAAA,CAAAA,kBAAAA,GAAAA,WAAAA,C,CAEA;;AACAA,kBAAAA,CAAAA,WAAAA,GAAAA,WAAAA;AAEAA,kBAAAA,CAAAA,SAAAA,GAA+B;AAC7BK,EAAAA,SAAAA,EAAWd,SAAAA,CADkB,MAAA;AAE7Be,EAAAA,4BAAAA,EAA8Bf,SAAAA,CAFD,IAAA;AAI7B;AACAgB,EAAAA,SAAAA,EAAWhB,SAAAA,CALkB,MAAA;AAM7BiB,EAAAA,OAAAA,EAASjB,SAAAA,CANoB,MAAA;AAO7BkB,EAAAA,YAAAA,EAAclB,SAAAA,CAPe,MAAA;AAS7BE,EAAAA,WAAAA,EAAa,SAAA,CAAA,KAAA,CAAgB;AAC3B;AACAiB,IAAAA,KAAAA,EAAOnB,SAAAA,CAFoB,MAAA;AAG3BoB,IAAAA,KAAAA,EAAOpB,SAAAA,CAHoB,MAAA;AAK3B;AACAqB,IAAAA,IAAAA,EAAMrB,SAAAA,CANqB,IAAA;AAO3BsB,IAAAA,QAAAA,EAAUtB,SAAAA,CAPiB,IAAA;AAS3B;AACAuB,IAAAA,KAAAA,EAAOvB,SAAAA,CAVoB,IAAA;AAW3BwB,IAAAA,IAAAA,EAAMxB,SAAAA,CAAUyB;AAXW,GAAhB,CATgB;AAuB7BZ,EAAAA,MAAAA,EAAQ,SAAA,CAAA,SAAA,CAAoB,CAC1B,SAAA,CAAA,OAAA,CACE,SAAA,CAAA,KAAA,CAAgB;AACda,IAAAA,KAAAA,EAAO1B,SAAAA,CAAAA,MAAAA,CAAiB2B;AADV,GAAhB,CADF,CAD0B,EAM1B,SAAA,CAAA,KAAA,CAAgB;AACdD,IAAAA,KAAAA,EAAO1B,SAAAA,CAAAA,MAAAA,CAAiB2B;AADV,GAAhB,CAN0B,CAApB,EASLA;AAhC0B,CAA/BlB;AAmCAA,kBAAAA,CAAAA,YAAAA,GAAkC;AAChCM,EAAAA,4BAAAA,EADgC,KAAA;AAEhCb,EAAAA,WAAAA,EAFgC,EAAA;AAGhCgB,EAAAA,YAAAA,EAAc;AAHkB,CAAlCT;AAMAmB,MAAAA,CAAAA,OAAAA,GAAAA,kBAAAA","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst internals = require('@sanity/block-content-to-hyperscript/internals')\nconst {serializers, serializeSpan, renderProps} = require('./targets/dom')\n\nconst {getImageUrl, blocksToNodes, mergeSerializers} = internals\nconst renderNode = React.createElement\n\nconst SanityBlockContent = props => {\n  const customSerializers = mergeSerializers(\n    SanityBlockContent.defaultSerializers,\n    props.serializers\n  )\n\n  const blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || []\n  })\n\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan)\n}\n\n// Expose default serializers to the user\nSanityBlockContent.defaultSerializers = serializers\n\n// Expose logic for building image URLs from an image reference/node\nSanityBlockContent.getImageUrl = getImageUrl\n\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func\n  }),\n\n  blocks: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        _type: PropTypes.string.isRequired\n      })\n    ),\n    PropTypes.shape({\n      _type: PropTypes.string.isRequired\n    })\n  ]).isRequired\n}\n\nSanityBlockContent.defaultProps = {\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {}\n}\n\nmodule.exports = SanityBlockContent\n"]},"metadata":{},"sourceType":"script"}