{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar objectAssign = require('object-assign');\n\nvar isDefined = function isDefined(val) {\n  return typeof val !== 'undefined';\n}; // Recursively merge/replace default serializers with user-specified serializers\n\n\nmodule.exports = function mergeSerializers(defaultSerializers, userSerializers) {\n  return Object.keys(defaultSerializers).reduce(function (acc, key) {\n    var type = _typeof(defaultSerializers[key]);\n\n    if (type === 'function') {\n      acc[key] = isDefined(userSerializers[key]) ? userSerializers[key] : defaultSerializers[key];\n    } else if (type === 'object') {\n      acc[key] = objectAssign({}, defaultSerializers[key], userSerializers[key]);\n    } else {\n      acc[key] = typeof userSerializers[key] === 'undefined' ? defaultSerializers[key] : userSerializers[key];\n    }\n\n    return acc;\n  }, {});\n};","map":{"version":3,"sources":["../src/mergeSerializers.js"],"names":["objectAssign","require","isDefined","module","type","defaultSerializers","acc","userSerializers"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAA5B,eAA4B,CAA5B;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,GAAA,EAAG;AAAA,SAAI,OAAA,GAAA,KAAJ,WAAA;AAArB,CAAA,C,CAEA;;;AACAC,MAAM,CAANA,OAAAA,GAAiB,SAAA,gBAAA,CAAA,kBAAA,EAAA,eAAA,EAA+D;AAC9E,SAAO,MAAM,CAAN,IAAA,CAAA,kBAAA,EAAA,MAAA,CAAuC,UAAA,GAAA,EAAA,GAAA,EAAc;AAC1D,QAAMC,IAAI,GAAA,OAAA,CAAUC,kBAAkB,CAAtC,GAAsC,CAA5B,CAAV;;AACA,QAAID,IAAI,KAAR,UAAA,EAAyB;AACvBE,MAAAA,GAAG,CAAHA,GAAG,CAAHA,GAAWJ,SAAS,CAACK,eAAe,CAAzBL,GAAyB,CAAhB,CAATA,GAAkCK,eAAe,CAAjDL,GAAiD,CAAjDA,GAAyDG,kBAAkB,CAAtFC,GAAsF,CAAtFA;AADF,KAAA,MAEO,IAAIF,IAAI,KAAR,QAAA,EAAuB;AAC5BE,MAAAA,GAAG,CAAHA,GAAG,CAAHA,GAAWN,YAAY,CAAA,EAAA,EAAKK,kBAAkB,CAAvB,GAAuB,CAAvB,EAA8BE,eAAe,CAApED,GAAoE,CAA7C,CAAvBA;AADK,KAAA,MAEA;AACLA,MAAAA,GAAG,CAAHA,GAAG,CAAHA,GACE,OAAOC,eAAe,CAAtB,GAAsB,CAAtB,KAAA,WAAA,GAA8CF,kBAAkB,CAAhE,GAAgE,CAAhE,GAAwEE,eAAe,CADzFD,GACyF,CADzFA;AAED;;AACD,WAAA,GAAA;AAVK,GAAA,EAAP,EAAO,CAAP;AADFH,CAAAA","sourcesContent":["const objectAssign = require('object-assign')\nconst isDefined = val => typeof val !== 'undefined'\n\n// Recursively merge/replace default serializers with user-specified serializers\nmodule.exports = function mergeSerializers(defaultSerializers, userSerializers) {\n  return Object.keys(defaultSerializers).reduce((acc, key) => {\n    const type = typeof defaultSerializers[key]\n    if (type === 'function') {\n      acc[key] = isDefined(userSerializers[key]) ? userSerializers[key] : defaultSerializers[key]\n    } else if (type === 'object') {\n      acc[key] = objectAssign({}, defaultSerializers[key], userSerializers[key])\n    } else {\n      acc[key] =\n        typeof userSerializers[key] === 'undefined' ? defaultSerializers[key] : userSerializers[key]\n    }\n    return acc\n  }, {})\n}\n"]},"metadata":{},"sourceType":"script"}